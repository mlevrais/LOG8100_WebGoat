name: "Main / Pull requests build"
on:
    pull_request:
        paths-ignore:
            - '.txt'
            - 'LICENSE'
            - 'docs/**'
        branches: [ main ]
    push:
        branches:
            - main
permissions:
  contents: write

jobs:
    pre-commit:
        name: Pre-commit check
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout git repository
                uses: actions/checkout@v4.1.6
            -   name: Setup python
                uses: actions/setup-python@v5
                with:
                    python-version: "3.9"
            -   uses: actions/setup-java@v4
                with:
                    distribution: 'temurin'
                    java-version: '21'
            -   name: Pre-commit checks
                uses: pre-commit/action@v3.0.0
            -   name: pre-commit-ci-lite
                uses: pre-commit-ci/lite-action@v1.1.0
                if: always()
    build:
        runs-on: ${{ matrix.os }}
        needs: [ pre-commit ]
        strategy:
            fail-fast: true
            matrix:
                os: [ windows-latest, ubuntu-latest, macos-13 ]
            max-parallel: 1
        steps:
            -   uses: actions/checkout@v4.1.6
            -   name: Set up JDK 21
                uses: actions/setup-java@v4.2.1
                with:
                    distribution: 'temurin'
                    java-version: 21
                    architecture: x64
                    cache: 'maven'
            -   name: Build with Maven
                run: mvn --no-transfer-progress verify
    security-scan:
        name: Container Security Analysis
        runs-on: ubuntu-latest
        needs: [ build ]
        steps:
            - name: Checkout git repository
              uses: actions/checkout@v4.1.6

            - name: Set up Docker
              uses: docker/setup-buildx-action@v2

            - name: Build Docker Image for Scan
              uses: docker/build-push-action@v4
              with:
                  context: .
                  file: Dockerfile
                  push: false
                  tags: temporary-image:latest

            - name: Scan with Trivy
              uses: aquasecurity/trivy-action@v0.11.1
              with:
                  image-ref: temporary-image:latest
                  severity: HIGH,CRITICAL
                  format: table
                  exit-code: 1 # Fail if vulnerabilities are found

            - name: Scan with Docker Scout
              run: docker scout cves temporary-image:latest

            - name: Scan with Clair
              uses: ovh/clair-action@v3
              with:
                  clair-image: temporary-image:latest
    sonarcloud:
        name: SonarCloud
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/checkout@v4.1.6
              with:
                fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            - name: SonarCloud Scan
              uses: SonarSource/sonarcloud-github-action@master
              env:
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
