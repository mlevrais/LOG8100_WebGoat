# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Publish Docker image

on:
  push:
    branches:
      - dockerscan
      - releases/*

jobs:  
  build:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
            java-version: '21'
            distribution: 'temurin'

      - name: Build application
        run: mvn clean package

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: jesusles/webgoat

      - name: Build and push Docker image
        id: push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          #build-args: |
          #  POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          #  POSTGRES_DB=${{ secrets.POSTGRES_DATABASE }}
          #  POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
          #  POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          #  POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          
  security_scan:
        name: Container Security Analysis
        runs-on: ubuntu-latest
        needs: [ build ]
        steps:
            - name: Scan with Trivy
              uses: aquasecurity/trivy-action@0.28.0
              with:
                  image-ref: ${{ steps.meta.outputs.tags }}
                  severity: HIGH,CRITICAL
                  format: table
                  exit-code: 1 # Fail if vulnerabilities are found

            - name: Scan with Docker Scout
              run: docker scout cves ${{ steps.meta.outputs.tags }}

            - name: Scan with Clair
              uses: quay/clair-action@main
              with:
                  image-ref: ${{ steps.meta.outputs.tags }}
                  format: sarif
                  output: clair_results.sarif
                  docker-config-dir: /

            - name: Upload sarif
              uses: github/codeql-action/upload-sarif@v2
              with:
                  sarif_file: clair_results.sarif
