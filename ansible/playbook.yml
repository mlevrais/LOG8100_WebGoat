- name: Pull and run Docker image
  hosts: localhost
  tasks:
    - name: Create namespace webgoat if not exist
      kubernetes.core.k8s:
        name: webgoat
        api_version: v1
        kind: Namespace
        state: present

    - name: Deploy application
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Deployment
          metadata:
            name: webgoat
            namespace: webgoat
          spec:
            replicas: 2
            selector:
              matchLabels:
                app: webgoat
            template:
              metadata:
                labels:
                  app: webgoat
              spec:
                containers:
                  - name: webgoat
                    image: "jesusles/webgoat:main"
                    env:
                      - name: "WEBGOAT_PORT"
                        value: "8080"
                    ports:
                      - containerPort: 8080  # Application port
                    readinessProbe:
                    httpGet:
                      path: /actuator/health  # Endpoint for checking readiness
                      port: 8080
                    initialDelaySeconds: 30  # Wait 10 seconds after the container starts before starting readiness checks
                    periodSeconds: 5        # Check every 5 seconds
                    failureThreshold: 3      # Retry 3 times before considering the pod "unready"

    - name: Create service to expose the application
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: webgoat
            namespace: webgoat
          spec:
            type: LoadBalancer  # Automatically create a LoadBalancer
            selector:
              app: webgoat  # Service will route traffic to pods with this label
            ports:
              - protocol: TCP
                port: 8080       # Expose this port on the service to the outside world
                targetPort: 8080  # Forward to containerPort 8080 inside the container

    - name: Add stable chart repo
      kubernetes.core.helm_repository:
        name: prometheus-community
        repo_url: "https://prometheus-community.github.io/helm-charts"

    - name: Separately update the repository cache
      kubernetes.core.helm:
        name: prometheus-community
        namespace: kube-system
        state: absent
        update_repo_cache: true

    - name: Install Helm chart for Prometheus
      kubernetes.core.helm:
        name: prometheus
        chart_ref: prometheus-community/prometheus
        release_namespace: webgoat
        state: present
        values_files: prometheus.yml  # Reference your custom values.yaml
    
    - name: Create ConfigMap for Prometheus alert rules from file
      kubernetes.core.k8s:
        name: prometheus-alert-rules
        namespace: webgoat
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: prometheus-alert-rules
            namespace: webgoat
          data:
            alert_rules.yaml: "{{ lookup('file', 'alert_rules.yml') }}"

    - name: Install kube-state-metrics using Helm
      kubernetes.core.helm:
        name: kube-state-metrics
        chart_ref: prometheus-community/kube-state-metrics
        release_namespace: webgoat  # Replace with your namespace
        state: present
        values:
          serviceMonitor.enabled: true  # This ensures Prometheus scrapes kube-state-metrics
          serviceMonitor.namespace: monitoring  # The namespace where Prometheus is running
          serviceMonitor.interval: 30s  # Scrape interval

    - name: Install Helm chart for Alert Manager
      kubernetes.core.helm:
        name: alert-manager
        chart_ref: prometheus-community/alertmanager
        release_namespace: webgoat
        state: present
        values_files: alertmanager.yml  # Reference your custom values.yaml

    - name: Add stable chart repo
      kubernetes.core.helm_repository:
        name: grafana
        repo_url: "https://grafana.github.io/helm-charts"

    - name: Install Helm chart for Grafana
      kubernetes.core.helm:
        name: grafana
        chart_ref: grafana/grafana
        release_namespace: webgoat
        state: present
